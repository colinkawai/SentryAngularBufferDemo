// In Angular 17 and future versions, zoneless support is forthcoming.
// Therefore, it's advisable to safely check whether the `run` function is
// available in the `<root>` context.
// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
const isNgZoneEnabled = typeof Zone !== 'undefined' && Zone.root?.run;
/**
 * The function that does the same job as `NgZone.runOutsideAngular`.
 *
 * ⚠️ Note: All of the Sentry functionality called from inside the Angular
 * execution context must be wrapped in this function. Angular's rendering
 * relies on asynchronous tasks being scheduled within its execution context.
 * Since Sentry schedules tasks that do not interact with Angular's rendering,
 * it may prevent Angular from functioning reliably. Consequently, it may disrupt
 * processes such as server-side rendering or client-side hydration.
 */
export function runOutsideAngular(callback) {
    // Running the `callback` within the root execution context enables Angular
    // processes (such as SSR and hydration) to continue functioning normally without
    // timeouts and delays that could affect the user experience. This approach is
    // necessary because some of the Sentry functionality continues to run in the background.
    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
    return isNgZoneEnabled ? Zone.root.run(callback) : callback();
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiem9uZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy96b25lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU1BLHNFQUFzRTtBQUN0RSwwRUFBMEU7QUFDMUUscUNBQXFDO0FBQ3JDLHNFQUFzRTtBQUN0RSxNQUFNLGVBQWUsR0FBRyxPQUFPLElBQUksS0FBSyxXQUFXLElBQUksSUFBSSxDQUFDLElBQUksRUFBRSxHQUFHLENBQUM7QUFFdEU7Ozs7Ozs7OztHQVNHO0FBQ0gsTUFBTSxVQUFVLGlCQUFpQixDQUFJLFFBQWlCO0lBQ3BELDJFQUEyRTtJQUMzRSxpRkFBaUY7SUFDakYsOEVBQThFO0lBQzlFLHlGQUF5RjtJQUN6RixzRUFBc0U7SUFDdEUsT0FBTyxlQUFlLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztBQUNoRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyB3b3VsZCBiZSBleHBvc2VkIGluIHRoZSBnbG9iYWwgZW52aXJvbm1lbnQgd2hlbmV2ZXIgYHpvbmUuanNgIGlzXG4vLyBpbmNsdWRlZCBpbiB0aGUgYHBvbHlmaWxsc2AgY29uZmlndXJhdGlvbiBwcm9wZXJ0eS4gU3RhcnRpbmcgZnJvbSBBbmd1bGFyIDE3LFxuLy8gdXNlcnMgY2FuIG9wdC1pbiB0byB1c2Ugem9uZWxlc3MgY2hhbmdlIGRldGVjdGlvbi5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5kZWNsYXJlIGNvbnN0IFpvbmU6IGFueTtcblxuLy8gSW4gQW5ndWxhciAxNyBhbmQgZnV0dXJlIHZlcnNpb25zLCB6b25lbGVzcyBzdXBwb3J0IGlzIGZvcnRoY29taW5nLlxuLy8gVGhlcmVmb3JlLCBpdCdzIGFkdmlzYWJsZSB0byBzYWZlbHkgY2hlY2sgd2hldGhlciB0aGUgYHJ1bmAgZnVuY3Rpb24gaXNcbi8vIGF2YWlsYWJsZSBpbiB0aGUgYDxyb290PmAgY29udGV4dC5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3NcbmNvbnN0IGlzTmdab25lRW5hYmxlZCA9IHR5cGVvZiBab25lICE9PSAndW5kZWZpbmVkJyAmJiBab25lLnJvb3Q/LnJ1bjtcblxuLyoqXG4gKiBUaGUgZnVuY3Rpb24gdGhhdCBkb2VzIHRoZSBzYW1lIGpvYiBhcyBgTmdab25lLnJ1bk91dHNpZGVBbmd1bGFyYC5cbiAqXG4gKiDimqDvuI8gTm90ZTogQWxsIG9mIHRoZSBTZW50cnkgZnVuY3Rpb25hbGl0eSBjYWxsZWQgZnJvbSBpbnNpZGUgdGhlIEFuZ3VsYXJcbiAqIGV4ZWN1dGlvbiBjb250ZXh0IG11c3QgYmUgd3JhcHBlZCBpbiB0aGlzIGZ1bmN0aW9uLiBBbmd1bGFyJ3MgcmVuZGVyaW5nXG4gKiByZWxpZXMgb24gYXN5bmNocm9ub3VzIHRhc2tzIGJlaW5nIHNjaGVkdWxlZCB3aXRoaW4gaXRzIGV4ZWN1dGlvbiBjb250ZXh0LlxuICogU2luY2UgU2VudHJ5IHNjaGVkdWxlcyB0YXNrcyB0aGF0IGRvIG5vdCBpbnRlcmFjdCB3aXRoIEFuZ3VsYXIncyByZW5kZXJpbmcsXG4gKiBpdCBtYXkgcHJldmVudCBBbmd1bGFyIGZyb20gZnVuY3Rpb25pbmcgcmVsaWFibHkuIENvbnNlcXVlbnRseSwgaXQgbWF5IGRpc3J1cHRcbiAqIHByb2Nlc3NlcyBzdWNoIGFzIHNlcnZlci1zaWRlIHJlbmRlcmluZyBvciBjbGllbnQtc2lkZSBoeWRyYXRpb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBydW5PdXRzaWRlQW5ndWxhcjxUPihjYWxsYmFjazogKCkgPT4gVCk6IFQge1xuICAvLyBSdW5uaW5nIHRoZSBgY2FsbGJhY2tgIHdpdGhpbiB0aGUgcm9vdCBleGVjdXRpb24gY29udGV4dCBlbmFibGVzIEFuZ3VsYXJcbiAgLy8gcHJvY2Vzc2VzIChzdWNoIGFzIFNTUiBhbmQgaHlkcmF0aW9uKSB0byBjb250aW51ZSBmdW5jdGlvbmluZyBub3JtYWxseSB3aXRob3V0XG4gIC8vIHRpbWVvdXRzIGFuZCBkZWxheXMgdGhhdCBjb3VsZCBhZmZlY3QgdGhlIHVzZXIgZXhwZXJpZW5jZS4gVGhpcyBhcHByb2FjaCBpc1xuICAvLyBuZWNlc3NhcnkgYmVjYXVzZSBzb21lIG9mIHRoZSBTZW50cnkgZnVuY3Rpb25hbGl0eSBjb250aW51ZXMgdG8gcnVuIGluIHRoZSBiYWNrZ3JvdW5kLlxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1tZW1iZXItYWNjZXNzXG4gIHJldHVybiBpc05nWm9uZUVuYWJsZWQgPyBab25lLnJvb3QucnVuKGNhbGxiYWNrKSA6IGNhbGxiYWNrKCk7XG59XG4iXX0=